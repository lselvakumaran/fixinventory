version: "3.8"

services:
  graphdb-upgrade:
    image: arangodb:3.10.1
    container_name: graphdb-upgrade
    environment:
      - ARANGO_ROOT_PASSWORD=
    ports:
      - "8529:8529"
    volumes:
      - resoto_graphdb_data:/var/lib/arangodb3
    command:
      - --database.auto-upgrade
  graphdb:
    image: arangodb:3.10.1
    depends_on:
      graphdb-upgrade:
        condition: service_completed_successfully
    container_name: graphdb
    environment:
      - ARANGO_ROOT_PASSWORD=
    ports:
      - "8529:8529"
    volumes:
      - resoto_graphdb_data:/var/lib/arangodb3
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
  tsdb:
    image: prom/prometheus:v2.33.4
    container_name: tsdb
    ports:
      - "9090:9090"
    volumes:
      - ./dockerV2/prometheus.yml:/etc/prometheus/prometheus.yml
      - resoto_tsdb_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=730d
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
  resotocore:
    image: somecr.io/someengineering/resotocore:edge
    container_name: resotocore
    depends_on:
      - graphdb
    ports:
      - "8900:8900"
    environment:
      - PSK
      - RESOTO_VERBOSE
      - RESOTO_LOG_TEXT
      - RESOTOCORE_ANALYTICS_OPT_OUT
      - RESOTOCORE_GRAPHDB_SERVER=http://graphdb:8529
      # Resoto will create a new database and user with this password using the root account
      - RESOTOCORE_GRAPHDB_PASSWORD=changeme
    command:
      - --override
      - resotocore.api.web_hosts=resotocore
      - resotocore.api.host_certificate.common_name=resotocore
      - resotocore.api.host_certificate.san_dns_names=resotocore
      - resotocore.api.tsdb_proxy_url=http://tsdb:9090
      - resotocore.runtime.start_collect_on_subscriber_connect=true
    restart: always
    stop_grace_period: 2m
  resotoworker:
    image: somecr.io/someengineering/resotoworker:edge
    container_name: resotoworker
    depends_on:
      - resotocore
    ports:
      - 9956:9956
    environment:
      - PSK
      - RESOTO_VERBOSE
      - RESOTO_LOG_TEXT
      # Pass temporary AWS credentials if provided
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      # Define the resotocore URI to connect to
      - RESOTOWORKER_RESOTOCORE_URI=https://resotocore:8900
    restart: always
    stop_grace_period: 2m
  resotometrics:
    image: somecr.io/someengineering/resotometrics:edge
    container_name: resotometrics
    depends_on:
      - resotocore
    ports:
      - 9955:9955
    environment:
      - PSK
      - RESOTO_VERBOSE
      - RESOTO_LOG_TEXT
      - RESOTOMETRICS_RESOTOCORE_URI=https://resotocore:8900
    restart: always
    stop_grace_period: 2m
  resotoshell:
    image: somecr.io/someengineering/resotoshell:edge
    container_name: resotoshell
    depends_on:
      - resotocore
    environment:
      - PSK
      - RESOTOSHELL_RESOTOCORE_URI=https://resotocore:8900
    volumes:
      - ~/resoto-downloads:/home/resoto/downloads
    command:
      - --wait
    restart: always
    stop_grace_period: 2m
volumes:
  resoto_graphdb_data:
  resoto_tsdb_data:
