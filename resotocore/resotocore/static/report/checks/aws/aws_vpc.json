{
    "provider": "aws",
    "service": "vpc",
    "checks": [
        {
            "name": "elb_application_classic_lb_logging_enabled",
            "title": "Ensure that logging is enabled for Application load balancers associated to infrastructure",
            "result_kinds": ["aws_elb"],
            "categories": [
                "security",
                "compliance"
            ],
            "risk": "Without adequate logging, you can audit security risks such as limit visibility, reduced threat detection and inability to measure performance metrics",
            "severity": "medium",
            "detect": {
                "manual": "Open the AWS Management Console -> Navigate to the EC2 service -> In the left navigation pane, click on Load Balancers under Load Balancing -> Select the ELB in question -> Go to the Description tab -> Look for the Access logs section -> If logging is enabled, it will show the S3 bucket where logs are stored. If it's not enabled, there will be no information in this section."
            },
            "remediation": {
                "text": "Go to the Attributes tab -> Find the Access logs section -> Click the Edit button -> Enable access logs and provide the necessary information, such as the S3 bucket and prefix -> Save the changes.",
                "url": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/enable-access-logging.html"
            },
            "source": "saad"
        },
        {
            "name": "lb_use_ssl_certificate",
            "title": "Ensure that Load balancer uses SSL certificate for 443 port ",
            "result_kinds": ["aws_elb"],
            "categories": [
                "security",
                "compliance"
            ],
            "risk": "Having a 443 port open without a Valid SSL certificate can cause security risks such as Exposure for sensitive information, susceptability to mulitple vunerabilities and a lack of trust from customers",
            "severity": "medium",
            "detect": {
                "manual": "Navigate to EC2 -> select Load balancers -> go to the listener tab -> check if there is a 443 port without an associated SSL certificate"
            },
            "remediation": {
                "text": "in the load balancer settings, click 'View/edit rules' for 443 and associate a valid ssl certificate",
                "url": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-update-certificates.html"
            },
            "source": "saad"
        },
        {
            "name": "elb_application_lb_waf_enabled",
            "title": "Ensure that Load balancer has WAF enabled to provide protection against many of the common exploits and attacks ",
            "result_kinds": ["aws_elb"],
            "categories": [
                "security",
                "compliance"
            ],
            "risk": "Enabling WAF (Web Application Firewall) on an ELB Application Load Balancer is important for security as it provides a layer of protection against common web exploits and attacks. WAF can filter, monitor, and block harmful traffic before it reaches your applications, enhancing the overall security posture.",
            "severity": "medium",
            "detect": {
                "manual": "Navigate to EC2 -> select Load balancers -> go to the listener tab -> check if there are rules associated with a WAF Web ACL."
            },
            "remediation": {
                "text": "Open the AWS WAF & Shield console, Go to 'Web ACLs', create or select an existing Web ACL.",
                "url": "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html"
            },
            "source": "saad"
        },
        {
            "name": "subnet_auto_assign_public_ip_disabled",
            "title": "Ensure that subnets have public ip disabled by default to prevent accidental public access",
            "result_kinds": ["aws_subnet"],
            "categories": [
                "security",
                "compliance"
            ],
            "risk": "Disabling auto-assign public IP in subnets is important for security because it reduces the exposure of instances to the public internet, minimizing the risk of external attacks. This setting is crucial in controlling the network accessibility of EC2 instances and maintaining a secure environment within the VPC.",
            "severity": "medium",
            "detect": {
                "manual": "Navigate to VPC -> select subnets -> check a subnet and inspect 'Auto-assign public IP' settings in details"
            },
            "remediation": {
                "text": "select subnet -> click 'Actions' -> 'Modify auto-assign IP settings' -> Uncheck 'Auto-assign IPv4' and save.",
                "url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html"
            },
            "source": "saad"
        },
        {
            "name": "default_security_group_restricts_all_traffic",
            "title": "Ensure that security groups provide a baseline of 'Deny all' ingress and egress access by restricting all traffic",
            "result_kinds": ["aws_securitygroup"],
            "categories": [
                "security",
                "compliance"
            ],
            "risk": "Having the default VPC security group restrict all traffic is important for security because it provides a baseline of 'deny all' ingress and egress, minimizing the risk of unauthorized access. This approach adheres to the principle of least privilege, ensuring that only explicitly allowed traffic can flow through the network, thereby enhancing security.    ",
            "severity": "medium",
            "detect": {
                "manual": "Navigate to VPC -> select 'Security Groups' -> identify the default security group (usually named 'default') -> Review the Ingress and Egress rules to verify if all traffic is restricted."
            },
            "remediation": {
                "text": "Modify the Ingress and Egress rules to deny all traffic -> Remove all existing rules. -> Add a deny all rule if necessary (by default, security groups deny all inbound traffic if no rules are set).",
                "url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-groups.html"
            },
            "source": "saad"
        },
        {
            "name": "security_group_allows_ingress_authorized_ports",
            "title": "Ensuring that VPC security groups allow only authorized ports for ingress traffic is crucial for security.",
            "result_kinds": ["aws_securitygroup"],
            "categories": [
                "security",
                "compliance"
            ],
            "risk": "Restricting security groups to only those ports and IP's that need them, helps control and restrict the flow of traffic into your VPC, reducing the attack surface and minimizing the risk of unauthorized access or potential security vulnerabilities.",
            "severity": "medium",
            "detect": {
                "manual": "Navigate to VPC -> select 'Security Groups' -> Choose the relevant security group -> Check the inbound rules to ensure that only authorized ports are allowed."
            },
            "remediation": {
                "text": "Modify the Ingress and Egress rules -> Edit the inbound rules to allow only authorized ports -> Remove any unnecessary or overly permissive rules.",
                "url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-groups.html"
            },
            "source": "saad"
        }
    ]
}
