name: Build Docker images

on:
    push:
        tags:
            - '*.*.*'
        branches:
            - main
    pull_request:
        paths:
            - 'Dockerfile.*'
            - 'dockerV2/**'
            - '.github/workflows/split-docker-build.yml'
    workflow_dispatch:

jobs:
    build:
        name: Build Docker Images
        runs-on: ubuntu-latest
        steps:
            -   name: Check out repository
                uses: actions/checkout@v2

            -   name: Get short commit SHA
                id: sha
                run: echo "::set-output name=short::${GITHUB_SHA::7}"

            -   name: Set build platforms
                id: platform
                run: |
                    if [ "${{ github.ref_type }}" = tag ]; then
                        echo "::set-output name=targets::linux/amd64,linux/arm64"
                        echo "::set-output name=uitag::latest"
                        echo "::set-output name=latest::true"
                    else
                        echo "::set-output name=targets::linux/amd64"
                        echo "::set-output name=uitag::edge"
                        echo "::set-output name=latest::false"
                    fi

            -   name: Check short commit SHA and build targets
                run: |
                    echo ${{ steps.sha.outputs.short }}
                    echo ${{ steps.platform.outputs.targets }}
                    echo ${{ steps.platform.outputs.uitag }}
                    echo ${{ steps.platform.outputs.latest }}

            -   name: Docker resotobase meta
                id: basemeta
                uses: docker/metadata-action@v3
                with:
                    images: |
                        someengineering/resotobase
                        ghcr.io/someengineering/resotobase
                    flavor: |
                      latest=${{ steps.platform.outputs.latest }}
                    tags: |
                        type=pep440,pattern={{version}}
                        type=pep440,pattern={{major}}.{{minor}}
                        type=pep440,pattern={{major}}
                        type=sha,prefix=
                        type=edge
                    labels: |
                        org.opencontainers.image.title=resotobase
                        org.opencontainers.image.description=Resoto base image
                        org.opencontainers.image.vendor=Some Engineering Inc.

            -   name: Docker resotocore meta
                id: coremeta
                uses: docker/metadata-action@v3
                with:
                    images: |
                        someengineering/resotocore
                        ghcr.io/someengineering/resotocore
                    flavor: |
                      latest=${{ steps.platform.outputs.latest }}
                    tags: |
                        type=pep440,pattern={{version}}
                        type=pep440,pattern={{major}}.{{minor}}
                        type=pep440,pattern={{major}}
                        type=sha,prefix=
                        type=edge
                    labels: |
                        org.opencontainers.image.title=resotocore
                        org.opencontainers.image.description=Resoto Core
                        org.opencontainers.image.vendor=Some Engineering Inc.

            -   name: Docker resotoworker meta
                id: workermeta
                uses: docker/metadata-action@v3
                with:
                    images: |
                        someengineering/resotoworker
                        ghcr.io/someengineering/resotoworker
                    flavor: |
                      latest=${{ steps.platform.outputs.latest }}
                    tags: |
                        type=pep440,pattern={{version}}
                        type=pep440,pattern={{major}}.{{minor}}
                        type=pep440,pattern={{major}}
                        type=sha,prefix=
                        type=edge
                    labels: |
                        org.opencontainers.image.title=resotoworker
                        org.opencontainers.image.description=Resoto Worker
                        org.opencontainers.image.vendor=Some Engineering Inc.

            -   name: Docker resotometrics meta
                id: metricsmeta
                uses: docker/metadata-action@v3
                with:
                    images: |
                        someengineering/resotometrics
                        ghcr.io/someengineering/resotometrics
                    flavor: |
                      latest=${{ steps.platform.outputs.latest }}
                    tags: |
                        type=pep440,pattern={{version}}
                        type=pep440,pattern={{major}}.{{minor}}
                        type=pep440,pattern={{major}}
                        type=sha,prefix=
                        type=edge
                    labels: |
                        org.opencontainers.image.title=resotometrics
                        org.opencontainers.image.description=Resoto Metrics
                        org.opencontainers.image.vendor=Some Engineering Inc.

            -   name: Docker resotoshell meta
                id: shellmeta
                uses: docker/metadata-action@v3
                with:
                    images: |
                        someengineering/resotoshell
                        ghcr.io/someengineering/resotoshell
                    flavor: |
                      latest=${{ steps.platform.outputs.latest }}
                    tags: |
                        type=pep440,pattern={{version}}
                        type=pep440,pattern={{major}}.{{minor}}
                        type=pep440,pattern={{major}}
                        type=sha,prefix=
                        type=edge
                    labels: |
                        org.opencontainers.image.title=resotoshell
                        org.opencontainers.image.description=Resoto Shell (resh)
                        org.opencontainers.image.vendor=Some Engineering Inc.

            -   name: Set up QEMU
                id: qemu
                uses: docker/setup-qemu-action@v1
                with:
                    image: tonistiigi/binfmt:latest
                    platforms: arm64,amd64

            -   name: Set up Docker Buildx
                id: buildx
                uses: docker/setup-buildx-action@v1

            -   name: Cache Docker layers
                uses: actions/cache@v2
                with:
                    path: /tmp/.buildx-cache
                    key: base-${{ runner.os }}-buildx-${{ github.sha }}
                    restore-keys: |
                        base-${{ runner.os }}-buildx-

            -   name: Log in to Docker Hub
                if: github.event_name != 'pull_request'
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKERHUB_USER }}
                    password: ${{ secrets.DOCKERHUB_PASS }}

            -   name: Log in to GitHub Container Registry
                if: github.event_name != 'pull_request'
                uses: docker/login-action@v1
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Build and push resotobase Docker image
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: ./Dockerfile.resotobase
                    platforms: ${{ steps.platform.outputs.targets }}
                    push: ${{ github.event_name != 'pull_request' }}
                    build-args: |
                        UI_IMAGE_TAG=${{ steps.platform.outputs.uitag }}
                        SOURCE_COMMIT=${{ github.sha }}
                        TESTS=false
                    tags: ${{ steps.basemeta.outputs.tags }}
                    labels: ${{ steps.basemeta.outputs.labels }}
                    cache-from: type=local,src=/tmp/.buildx-cache
                    cache-to: type=local,dest=/tmp/.buildx-cache-new

            -   name: Build and push resotocore Docker image
                if: github.event_name != 'pull_request'
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: ./Dockerfile.resotocore
                    platforms: ${{ steps.platform.outputs.targets }}
                    push: ${{ github.event_name != 'pull_request' }}
                    build-args: |
                        IMAGE_TAG=${{ steps.sha.outputs.short }}
                    tags: ${{ steps.coremeta.outputs.tags }}
                    labels: ${{ steps.coremeta.outputs.labels }}

            -   name: Build and push resotoworker Docker image
                if: github.event_name != 'pull_request'
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: ./Dockerfile.resotoworker
                    platforms: ${{ steps.platform.outputs.targets }}
                    push: ${{ github.event_name != 'pull_request' }}
                    build-args: |
                        IMAGE_TAG=${{ steps.sha.outputs.short }}
                    tags: ${{ steps.workermeta.outputs.tags }}
                    labels: ${{ steps.workermeta.outputs.labels }}

            -   name: Build and push resotometrics Docker image
                if: github.event_name != 'pull_request'
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: ./Dockerfile.resotometrics
                    platforms: ${{ steps.platform.outputs.targets }}
                    push: ${{ github.event_name != 'pull_request' }}
                    build-args: |
                        IMAGE_TAG=${{ steps.sha.outputs.short }}
                    tags: ${{ steps.metricsmeta.outputs.tags }}
                    labels: ${{ steps.metricsmeta.outputs.labels }}

            -   name: Build and push resotoshell Docker image
                if: github.event_name != 'pull_request'
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: ./Dockerfile.resotoshell
                    platforms: ${{ steps.platform.outputs.targets }}
                    push: ${{ github.event_name != 'pull_request' }}
                    build-args: |
                        IMAGE_TAG=${{ steps.sha.outputs.short }}
                    tags: ${{ steps.shellmeta.outputs.tags }}
                    labels: ${{ steps.shellmeta.outputs.labels }}

            -   name: Move cache
                run: |
                    rm -rf /tmp/.buildx-cache
                    mv /tmp/.buildx-cache-new /tmp/.buildx-cache
