name: FixShell Homebrew (Release)
on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:

jobs:
  fixshell-hombrew:
    name: "fixshell-homebrew"
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Wait for FixLib to be published on PyPI
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: fixlib
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for FixShell to be published on PyPI
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: fixshell
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate with GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ secrets.SOME_CI_PAT }}"

      - name: Bump homebrew
        env:
          GITHUB_TOKEN: ${{ secrets.SOME_CI_PAT }}
        run: |
          git config --global user.email "ci@some.engineering"
          git config --global user.name "Some CI"
          git clone "https://$GITHUB_TOKEN@github.com/someengineering/homebrew-tap.git"
          # make requirements available to the the homebrew formula
          cp requirements.txt homebrew-tap/requirements-fix.txt
          cd homebrew-tap
          TAG_NAME=${{ github.ref }}
          TAG_NAME=${TAG_NAME#refs/tags/}
          TAG_NAME=${TAG_NAME#refs/heads/}
          BRANCH_NAME="ci/bump-fixshell-$TAG_NAME"
          git checkout -b "$BRANCH_NAME"
          make fixshell
          # delete requirements again, nothing to commit
          rm requirements-fix.txt
          if ! git diff --quiet; then
            git commit -am "Bump fixshell to $TAG_NAME"
            git push origin "$BRANCH_NAME"
            gh pr create --title "Bump fixshell to $TAG_NAME" --body "" --base main --head "$BRANCH_NAME"
          else
            echo "No changes to commit"
          fi
