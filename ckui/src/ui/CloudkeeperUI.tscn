[gd_scene load_steps=32 format=2]

[ext_resource path="res://ui/views/UI_CommandLine.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/graphics/1px.png" type="Texture" id=2]
[ext_resource path="res://scripts/tools/blur.gd" type="Script" id=3]
[ext_resource path="res://ui/3delements/scripts/3D_viewport.gd" type="Script" id=4]
[ext_resource path="res://ui/views/UI_Dashboard.tscn" type="PackedScene" id=5]
[ext_resource path="res://ui/views/scripts/main_cloudkeeper_ui.gd" type="Script" id=6]
[ext_resource path="res://ui/views/UI_Search.tscn" type="PackedScene" id=7]
[ext_resource path="res://ui/views/UI_Topbar.tscn" type="PackedScene" id=8]
[ext_resource path="res://ui/views/UI_NodeInfo.tscn" type="PackedScene" id=11]
[ext_resource path="res://assets/graphics/noise.png" type="Texture" id=12]
[ext_resource path="res://ui/views/UI_QueryEngine.tscn" type="PackedScene" id=13]
[ext_resource path="res://ui/views/UI_Blastradius.tscn" type="PackedScene" id=14]
[ext_resource path="res://ui/views/UI_Loading.tscn" type="PackedScene" id=15]
[ext_resource path="res://ui/elements/Element_Popup_LoadFile.tscn" type="PackedScene" id=16]
[ext_resource path="res://scripts/tools/jwt.gd" type="Script" id=17]
[ext_resource path="res://scripts/networking/api.gd" type="Script" id=18]
[ext_resource path="res://ui/elements/Element_Popup_ConnectToCore.tscn" type="PackedScene" id=19]
[ext_resource path="res://ui/3delements/UI_Graph_3D.tscn" type="PackedScene" id=20]
[ext_resource path="res://ui/elements/LabelService.tscn" type="PackedScene" id=21]

[sub_resource type="Shader" id=21]
code = "shader_type canvas_item;

uniform vec2 center = vec2(0.0, 0.0);
uniform float size: hint_range(0.0,5.0) = 1.0;
uniform vec2 squishness = vec2(1.0);

uniform sampler2D gradient;

void fragment() {
	float d = length((2.0 * (UV - center) * squishness * size) - 1.0 * size * squishness );
	vec4 color = texture( gradient, vec2(d, 0.0) );
	COLOR = color;
}"

[sub_resource type="Gradient" id=23]
colors = PoolColorArray( 0.0464516, 0.144741, 0.290039, 1, 0.027451, 0.0745098, 0.168627, 1 )

[sub_resource type="GradientTexture" id=22]
gradient = SubResource( 23 )
width = 70

[sub_resource type="ShaderMaterial" id=24]
shader = SubResource( 21 )
shader_param/center = Vector2( 0, 0 )
shader_param/size = 0.5
shader_param/squishness = Vector2( 1.5, 1 )
shader_param/gradient = SubResource( 22 )

[sub_resource type="ProceduralSky" id=27]
sky_top_color = Color( 0.00784314, 0.117647, 0.227451, 1 )
sky_horizon_color = Color( 0.0196078, 0.160784, 0.305882, 1 )
sky_curve = 0.0743262
ground_bottom_color = Color( 0.00784314, 0.117647, 0.227451, 1 )
ground_horizon_color = Color( 0.0196078, 0.160784, 0.305882, 1 )
ground_curve = 0.066986
sun_color = Color( 0.27451, 0.192157, 1, 1 )
sun_latitude = 25.0
sun_longitude = 100.0
sun_angle_min = 0.0
sun_angle_max = 160.0
sun_curve = 0.0450625
sun_energy = 0.2
texture_size = 0

[sub_resource type="Environment" id=28]
background_mode = 2
background_sky = SubResource( 27 )
background_sky_orientation = Basis( 1, 0, 0, 0, 0.984808, -0.173648, 0, 0.173648, 0.984808 )
background_color = Color( 0.0156863, 0.137255, 0.258824, 1 )
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_sky_contribution = 0.0
fog_enabled = true
fog_color = Color( 0.027451, 0.203922, 0.301961, 0.827451 )
fog_sun_color = Color( 0, 0, 0, 1 )
fog_depth_begin = 1980.0
fog_depth_end = 2200.0
fog_height_min = -100.0
fog_height_max = 100.0
dof_blur_far_distance = 964.1
dof_blur_far_amount = 0.05
dof_blur_far_quality = 2
glow_enabled = true
glow_levels/1 = true
glow_levels/2 = true
glow_levels/4 = true
glow_intensity = 0.1
glow_blend_mode = 1
glow_bicubic_upscale = true
glow_high_quality = true
adjustment_enabled = true

[sub_resource type="World" id=26]
environment = SubResource( 28 )

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;

uniform float power;

void fragment() {
	COLOR = textureLod(SCREEN_TEXTURE, SCREEN_UV, power);
}"

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 13 )
shader_param/power = 0.0

[sub_resource type="Shader" id=15]
code = "shader_type canvas_item;

void fragment() {
	COLOR = textureLod(SCREEN_TEXTURE, SCREEN_UV, 4.0);
}"

[sub_resource type="ShaderMaterial" id=16]
shader = SubResource( 15 )

[sub_resource type="Environment" id=17]
background_mode = 4
background_canvas_max_layer = 10
dof_blur_far_distance = 1000.0
dof_blur_far_amount = 1.0
glow_enabled = true
glow_levels/2 = true
glow_levels/4 = true
glow_levels/5 = false
glow_intensity = 0.2
glow_strength = 0.8
glow_blend_mode = 1
glow_bicubic_upscale = true
glow_high_quality = true

[node name="CloudkeeperUI" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = ExtResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="API" type="Node" parent="."]
script = ExtResource( 18 )

[node name="JWT" type="Node" parent="API"]
script = ExtResource( 17 )

[node name="BG" type="CanvasLayer" parent="."]
layer = -2

[node name="BG" type="ColorRect" parent="BG"]
material = SubResource( 24 )
margin_right = 1920.0
margin_bottom = 1080.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="UIGraph3DViewport" type="ViewportContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
size_flags_horizontal = 3
size_flags_vertical = 3
stretch = true
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="UIGraph3DViewport"]
size = Vector2( 1920, 1080 )
own_world = true
world = SubResource( 26 )
handle_input_locally = false
msaa = 3
render_target_update_mode = 3
physics_object_picking = true

[node name="UIGraph3D" parent="UIGraph3DViewport/Viewport" instance=ExtResource( 20 )]
main_ui = NodePath("../../..")

[node name="UI" type="CanvasLayer" parent="."]

[node name="Blur" type="Sprite" parent="UI"]
material = SubResource( 14 )
position = Vector2( 960, 540 )
scale = Vector2( 1920, 1080 )
z_as_relative = false
texture = ExtResource( 2 )
script = ExtResource( 3 )

[node name="BlurTopBar" type="Sprite" parent="UI"]
material = SubResource( 16 )
position = Vector2( 960, 33.5 )
scale = Vector2( 1920, 67 )
z_as_relative = false
texture = ExtResource( 2 )

[node name="UIDashboard" parent="UI" instance=ExtResource( 5 )]
visible = false
margin_left = -1920.0
margin_right = -1920.0
rect_min_size = Vector2( 1920, 1080 )

[node name="UISearch" parent="UI" instance=ExtResource( 7 )]
visible = false
margin_right = 1920.0
margin_bottom = 1080.0

[node name="UIQueryEngine" parent="UI" instance=ExtResource( 13 )]
visible = false
margin_left = 1920.0
margin_right = 1920.0

[node name="UINodeInfo" parent="UI" instance=ExtResource( 11 )]
visible = false

[node name="UIBlastradius" parent="UI" instance=ExtResource( 14 )]
visible = false

[node name="UITopbar" parent="UI" instance=ExtResource( 8 )]
margin_bottom = 70.0

[node name="UILoading" parent="UI" instance=ExtResource( 15 )]
visible = false

[node name="UICommandLine" parent="UI" instance=ExtResource( 1 )]
margin_top = 1048.0
margin_bottom = 1080.0

[node name="Noise" type="TextureRect" parent="UI"]
modulate = Color( 1, 1, 1, 0.0392157 )
margin_right = 1920.0
margin_bottom = 1080.0
mouse_filter = 2
texture = ExtResource( 12 )
stretch_mode = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Popups" type="Control" parent="UI"]
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PopupLoadFile" parent="UI/Popups" instance=ExtResource( 16 )]
visible = false
popup_exclusive = true

[node name="PopupConnectCore" parent="UI/Popups" instance=ExtResource( 19 )]
visible = false

[node name="LabelService" parent="." instance=ExtResource( 21 )]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 17 )

[connection signal="close_blast_radius" from="UI/UIBlastradius" to="." method="_on_UIBlastradius_close_blast_radius"]
[connection signal="load_file" from="UI/Popups/PopupLoadFile" to="UIGraph3DViewport/Viewport/UIGraph3D" method="read_data"]
[connection signal="use_example_data" from="UI/Popups/PopupLoadFile" to="UIGraph3DViewport/Viewport/UIGraph3D" method="read_data"]
[connection signal="create_graph" from="UI/Popups/PopupConnectCore" to="UIGraph3DViewport/Viewport/UIGraph3D" method="get_graph_from_api"]
[connection signal="use_example_data" from="UI/Popups/PopupConnectCore" to="UIGraph3DViewport/Viewport/UIGraph3D" method="read_data"]
