[gd_scene load_steps=30 format=2]

[ext_resource path="res://ui/views/UI_CommandLine.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/graphics/1px.png" type="Texture" id=2]
[ext_resource path="res://scripts/tools/blur.gd" type="Script" id=3]
[ext_resource path="res://assets/graphics/spotlight_1.png" type="Texture" id=4]
[ext_resource path="res://ui/views/UI_Dashboard.tscn" type="PackedScene" id=5]
[ext_resource path="res://ui/views/scripts/main_cloudkeeper_ui.gd" type="Script" id=6]
[ext_resource path="res://ui/views/UI_Search.tscn" type="PackedScene" id=7]
[ext_resource path="res://ui/views/UI_Topbar.tscn" type="PackedScene" id=8]
[ext_resource path="res://ui/views/UI_GraphView.tscn" type="PackedScene" id=9]
[ext_resource path="res://ui/views/UI_NodeInfo.tscn" type="PackedScene" id=11]
[ext_resource path="res://assets/graphics/noise.png" type="Texture" id=12]
[ext_resource path="res://ui/views/UI_QueryEngine.tscn" type="PackedScene" id=13]

[sub_resource type="Shader" id=17]
code = "shader_type canvas_item;

uniform vec2 center = vec2(0.0, 0.0);
uniform float size: hint_range(0.0,5.0) = 1.0;
uniform vec2 squishness = vec2(1.0);

uniform sampler2D gradient;

void fragment() {
	float d = length((2.0 * (UV - center) * squishness * size) - 1.0 * size * squishness );
	vec4 color = texture( gradient, vec2(d, 0.0) );
	COLOR = color;
}"

[sub_resource type="Gradient" id=18]
colors = PoolColorArray( 0.0464516, 0.144741, 0.290039, 1, 0.027451, 0.0745098, 0.168627, 1 )

[sub_resource type="GradientTexture" id=19]
gradient = SubResource( 18 )
width = 70

[sub_resource type="ShaderMaterial" id=20]
shader = SubResource( 17 )
shader_param/center = Vector2( 0, 0 )
shader_param/size = 0.5
shader_param/squishness = Vector2( 1.5, 1 )
shader_param/gradient = SubResource( 19 )

[sub_resource type="RectangleShape2D" id=15]
extents = Vector2( 960, 540 )

[sub_resource type="Shader" id=21]
code = "shader_type canvas_item;
render_mode blend_add;

uniform vec2 center = vec2(0.0, 0.0);
uniform float size: hint_range(0.0,5.0) = 1.0;
uniform vec2 squishness = vec2(1.0);

uniform sampler2D gradient;

void fragment() {
	float d = length((2.0 * (UV - center) * squishness * size) - 1.0 * size * squishness );
	vec4 color = texture( gradient, vec2(d, 0.0) );
	COLOR = color;
}"

[sub_resource type="Gradient" id=22]
colors = PoolColorArray( 0, 0.407843, 1, 0.254902, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=23]
gradient = SubResource( 22 )

[sub_resource type="ShaderMaterial" id=24]
shader = SubResource( 21 )
shader_param/center = Vector2( 0, 0 )
shader_param/size = 1.0
shader_param/squishness = Vector2( 1, 1 )
shader_param/gradient = SubResource( 23 )

[sub_resource type="Gradient" id=25]
colors = PoolColorArray( 1, 0.294118, 0, 0.211765, 0.149902, 0, 0, 0 )

[sub_resource type="GradientTexture" id=26]
gradient = SubResource( 25 )

[sub_resource type="ShaderMaterial" id=27]
shader = SubResource( 21 )
shader_param/center = Vector2( 0, 0 )
shader_param/size = 1.0
shader_param/squishness = Vector2( 1, 1 )
shader_param/gradient = SubResource( 26 )

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

uniform float power;

void fragment() {
	COLOR = textureLod(SCREEN_TEXTURE, SCREEN_UV, power);
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/power = 0.0

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;

void fragment() {
	COLOR = textureLod(SCREEN_TEXTURE, SCREEN_UV, 4.0);
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 14 )

[sub_resource type="Environment" id=16]
background_mode = 4
glow_enabled = true
glow_levels/1 = true
glow_levels/2 = true
glow_levels/4 = true
glow_blend_mode = 1
glow_bicubic_upscale = true

[node name="CloudkeeperUI" type="Node2D"]
script = ExtResource( 6 )

[node name="BG" type="CanvasLayer" parent="."]
layer = -2

[node name="BG" type="ColorRect" parent="BG"]
material = SubResource( 20 )
margin_left = -71.0
margin_top = -73.7308
margin_right = 1986.0
margin_bottom = 1132.27
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MouseDetector" type="Area2D" parent="BG"]
position = Vector2( 960, 540 )
collision_mask = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/MouseDetector"]
visible = false
shape = SubResource( 15 )

[node name="Graph" type="Node2D" parent="."]
position = Vector2( 960, 540 )
z_index = -1
z_as_relative = false

[node name="GraphCam" type="Camera2D" parent="Graph"]
scale = Vector2( 0.1, 0.1 )
current = true

[node name="GraphView" parent="Graph" instance=ExtResource( 9 )]
graph_cam = NodePath("../GraphCam")
graph_bg = NodePath("../../BG/BG")

[node name="Spotlight1" type="Sprite" parent="Graph"]
material = SubResource( 24 )
position = Vector2( -1912, 1524 )
scale = Vector2( 5.40625, 5.40625 )
texture = ExtResource( 4 )

[node name="Spotlight2" type="Sprite" parent="Graph"]
material = SubResource( 27 )
position = Vector2( 2391.89, -991.51 )
scale = Vector2( 3.8125, 3.8125 )
texture = ExtResource( 4 )

[node name="AnimTween" type="Tween" parent="Graph"]

[node name="CamMoveTween" type="Tween" parent="Graph"]

[node name="NewNodeSelectionTimer" type="Timer" parent="Graph"]
wait_time = 0.05
one_shot = true

[node name="UI" type="CanvasLayer" parent="."]

[node name="Blur" type="Sprite" parent="UI"]
material = SubResource( 11 )
position = Vector2( 960, 540 )
scale = Vector2( 1920, 1080 )
z_as_relative = false
texture = ExtResource( 2 )
script = ExtResource( 3 )

[node name="BlurTopBar" type="Sprite" parent="UI"]
material = SubResource( 13 )
position = Vector2( 960, 32 )
scale = Vector2( 1920, 71 )
z_as_relative = false
texture = ExtResource( 2 )

[node name="UIDashboard" parent="UI" instance=ExtResource( 5 )]
visible = false
margin_left = -1920.0
margin_right = -1920.0
rect_min_size = Vector2( 1920, 1080 )

[node name="UISearch" parent="UI" instance=ExtResource( 7 )]
visible = false
margin_right = 1920.0
margin_bottom = 1080.0

[node name="UIQueryEngine" parent="UI" instance=ExtResource( 13 )]
visible = false
margin_left = 1920.0
margin_right = 1920.0

[node name="UINodeInfo" parent="UI" instance=ExtResource( 11 )]

[node name="UITopbar" parent="UI" instance=ExtResource( 8 )]
margin_right = 1920.0
margin_bottom = 70.0

[node name="UICommandLine" parent="UI" instance=ExtResource( 1 )]
margin_top = 1040.0
margin_bottom = 1120.0

[node name="Noise" type="TextureRect" parent="UI"]
modulate = Color( 1, 1, 1, 0.0392157 )
margin_right = 1920.0
margin_bottom = 1080.0
mouse_filter = 2
texture = ExtResource( 12 )
stretch_mode = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 16 )

[connection signal="input_event" from="BG/MouseDetector" to="." method="_on_MouseDetector_input_event"]
[connection signal="tween_all_completed" from="Graph/CamMoveTween" to="." method="_on_CamMoveTween_tween_all_completed"]
[connection signal="timeout" from="Graph/NewNodeSelectionTimer" to="." method="_on_NewNodeSelectionTimer_timeout"]
